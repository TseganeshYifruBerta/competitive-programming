class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        level = 0
        q = collections.deque([])
        for row in range(len(grid)):
            for col in range(len(grid[row])):
                if grid[row][col] == 2:
                    q.append((row, col, level))
        d= [(-1, 0), (0, -1), (1, 0), (0, 1)]
        while q:
            row, col, level = q.popleft()
            for dx, dy in d:
                nx = dx + row
                ny = dy + col
                if 0 <= nx < len(grid) and 0 <= ny < len(grid[row]) :
                    if grid[nx][ny] == 1 :
                        grid[nx][ny] = 2
                        q.append((nx, ny, level + 1))
        for row in range(len(grid)):
            for col in range(len(grid[row])) : 
                if grid[row][col] == 1:
                    return -1
        return level
                            
                    
                    
            
        
