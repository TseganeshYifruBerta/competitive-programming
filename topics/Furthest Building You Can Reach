class Solution:
    def furthestBuilding(self, heights: List[int], bricks: int, ladders: int) -> int:
        res = heights[0]
        max_heap = []
        for i in range(1,len(heights)):
            if res >= heights[i]:
                res = heights[i]
            elif res < heights[i]:
                difference = heights[i] - res
                if bricks >= difference:
                    bricks -= difference
                    heappush(max_heap,-difference)
                    res = heights[i]
                elif ladders >= 1:
                    if max_heap and difference < -max_heap[0]:
                        max_bricks=heappop(max_heap)
                        heappush(max_heap,-difference)
                        bricks += (-max_bricks)-difference
                        ladders -= 1
                        res= heights[i]
                        
                    else:
                        ladders-=1
                        res=heights[i]
                else:
                    return i-1
            else:
                return i
        
        return len(heights)-1
            
