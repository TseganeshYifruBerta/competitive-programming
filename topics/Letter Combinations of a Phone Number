class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        d = {
            "2": ['a','b','c'],
            "3" : ['d', 'e', 'f'],
            "4" : ['g', 'h', 'i'],
            "5" : ['j', 'k', 'l'],
            "6" : ['m', 'n', 'o'],
            "7" : ['p', 'q', 'r', 's'],
            "8" : ['t', 'u', 'v'],
            "9" : ['w', 'x', 'y', 'z']
        }
        lst = []
        res = []
        for i in digits:
            lst.append(d[i])
        if len(lst) < 1:
            
            for i in range(len(lst)):
                temp = lst[i]
                res.append(i)
            return res
        lst.reverse()
        while len(lst) > 1:
            temp = []
            temp1 = lst.pop()
            temp2 = lst.pop()
            for i in range(len(temp1)):
                for j in range(len(temp2)):
                    t = temp1[i] + temp2[j]
                    temp.append(t)
            lst.append(temp) 
        return lst[0]
