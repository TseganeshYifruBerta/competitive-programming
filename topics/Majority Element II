class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        n = math.floor(len(nums) / 3)
        c = Counter(nums)
        ans = []
        for i in c:
            if c[i] > n: ans.append(i)
        return ans
#with O(1) space complexity
class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        n = math.floor(len(nums) / 3)
        nums.sort()
        p = 0
        ans = []
        while p < len(nums):
            temp = nums[p]
            c = 0
            while p < len(nums) and nums[p] == temp:
                c += 1
                p += 1
            if c > n: ans.append(temp)
        return ans
